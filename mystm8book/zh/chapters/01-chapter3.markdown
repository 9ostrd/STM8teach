# 软件开发那点事 #
下面这些东西,是我在软件方面的书籍和实践中学习到的一点心得.之前学习嵌入式的时候,并没有接触到相关的知识.

## 使用版本控制管理工具 ##
你是否有这样一种经历?


### 使用Git来管理你的项目 ###
Git是一种版本控制工具，之前出现的比较著名的有SVN、CVS、Clearcase……，他们都被广泛使用于各种各样的软件项目中。Git相对于其它工具的优点在于，Git是分布式的，而也就是说软件源是保存在用户本地，而非只是在远程服务器上。这样，就方便用户能够随时接触到代码。而且万一远程服务器出现故障，数据的安全性也有保障。现在很多项目已经转移到Git上了，著名的有：linux内核，

如果你想学习Git，那么在Github上建立一个账户吧。Github是一个支持Git的项目托管网站。上面有很多程序员将自己的项目放在上面进行管理。如果你的项目是开源的，那么一切都是免费的。

如果是第一次安装，配置环境的图文教程可以在<http://help.github.com/win-set-up-git/>找到。同时[Github的帮助网站](http://help.github.com/)上面有关于Git的详细帮助。

当然如果需要系统的学习，[《PROGIT》](http://progit.org/)这本书就是一个比较详尽的教程。

## 说说IDE ##
平时经常可以听到IDE，这个名字。那么IDE到底是什么呢？
IDE的全称是： **I**ntegrated **D**evelopment **E**nvironment。我们平时写程序，无外乎编辑——编译——连接的过程，出故障了也许要做软/硬件单步调试。IDE给我们写程序，提供了上面这个流程中，所需要的一切。51上的KEIL，AVR上的ICC、CVAVR、IAR，都是IDE。

### IDE的优势 ###
我们大量使用IDE，是有原因的：
一方面IDE的安装使用极其方便，网上下好一路next即可，所有需要的工具都在里面，不许要用户自行去寻找。另一方面，IDE所提供的程序经过较好的测试，稳定性更高些。

### 尝试着脱离IDE吧 ###
尽管IDE非常方便，但是我们


## 对开源本身的思考 ##



## 关于Makefile ##


## 其它参考 ##
